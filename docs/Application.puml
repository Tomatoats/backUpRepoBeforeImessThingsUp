@startuml

package controllers{
class ListController {
    -Button removeButton;
    -Button AddItemButton;

    -Button sortAll;
    -Button sortComplete;
    -Button sortIncomplete;


    -TextField descriptionText;
    -TextField dueDateText;
    -Label errorLabel;


    -Button clearButton;
    -Button loadButton;
    -Button saveButton;


    -TableView<Item> listTable;
    +TableColumn colComplete;
    +TableColumn colDescription;
    +TableColumn colDueDate;
    +CheckBox checkBox;

    +initialize(URL, ResourceBundle)
    -main(String[] args)

    addPressed(ActionEvent event)
    removePressed(ActionEvent event)

    allPress(ActionEvent event)
    completePress(ActionEvent event)
    incompletePress(ActionEvent event)

    clearPressed(ActionEvent event)
    loadPressed(ActionEvent event)
    saveList(ActionEvent event)

    +removeItem()
    +findAndSave()
    +incompleteLists()
    +completeLists()
    +allList()
    +addItem()

    +getItem()
    +setListTable(listTable)
    +getListTable()
    +setList(List)
    +clearList()
    +initializeTable()
    +listload()
    save(File)
    +closeAndOpen(string, string)
    +close()
    }
}
class ObservableList{}

class TodoListApplication{
    ObservableList currentList;
    Map<String,Scene> scenemap;

    +start(stage)
    +main(String[] args)
    +addscenes()
    +getCurrentList()
    getScenemap()

}
package functions {
    class Item{
     String dueDate;
     String description;
     public CheckBox complete;
     Button remove;
     +Item(String,String)
     +getDueDate()
     +getDescription()
     +getCheckBox()
     +setDueDate(string)
     +setDescription(string)
     +setComplete(CheckBox)
     +whatComplete(string)

    +DueDateRegex(string)
    +DescriptionLength(string)
    }

    class List {
     ObservableList<Item> currentList;
     +addListener(listener)
     +removeListener(listener)
     +addAll(List.elements)
     +setAll(List.elements)
     +setAll(collection)
     +removeAll(List.elements)
     +retainAll(List.elements)
     +remove(int, int)
     +size(int)
     +isEmpty()
     +contains(object)
     +iterator()
     +toArray()
     +toArray(Array[])
     +add(List)
     +remove(object)
     +containsAll(collection)
     +addAll(collection)
     +addAll(int, (collection)
     +removeAll(Collection)
     +retainAll(collection)
     +clear();
     +get(int)
     +set(int, List.elements)
     +add(int, List.elements)
     +remove(int)
     +indexOf(object)
     +lastIndexOf(object)
     +listIterator()
     +listIterator(int)
     +subList(int, int)
     +addListener(listener)
     +removeListener(listener)

    }

}
java.fx.application.Application <|-- TodoListApplication
TodoListApplication <|-- ListController
java.fx.initializable -- ListController
ObservableList <|-- List
List -- Item
ListController -- List

@enduml